//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Flexiv
{
    [Serializable]
    public class RobotStatesMsg : Message
    {
        public const string k_RosMessageName = "flexiv_msgs/RobotStates";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public sbyte mode;
        public double[] q;
        public double[] theta;
        public double[] dq;
        public double[] dtheta;
        public double[] tau;
        public double[] tau_des;
        public double[] tau_dot;
        public double[] tau_ext;
        public Geometry.PoseMsg tcp_pose;
        public Geometry.PoseMsg tcp_pose_des;
        public Geometry.AccelMsg tcp_vel;
        public Geometry.PoseMsg cam_pose;
        public Geometry.PoseMsg flange_pose;
        public Geometry.WrenchMsg ft_sensor_raw;
        public Geometry.WrenchMsg ext_wrench_tcp_frame;
        public Geometry.WrenchMsg ext_wrench_base_frame;
        public bool digital_input_0;

        public RobotStatesMsg()
        {
            this.header = new Std.HeaderMsg();
            this.mode = 0;
            this.q = new double[7];
            this.theta = new double[7];
            this.dq = new double[7];
            this.dtheta = new double[7];
            this.tau = new double[7];
            this.tau_des = new double[7];
            this.tau_dot = new double[7];
            this.tau_ext = new double[7];
            this.tcp_pose = new Geometry.PoseMsg();
            this.tcp_pose_des = new Geometry.PoseMsg();
            this.tcp_vel = new Geometry.AccelMsg();
            this.cam_pose = new Geometry.PoseMsg();
            this.flange_pose = new Geometry.PoseMsg();
            this.ft_sensor_raw = new Geometry.WrenchMsg();
            this.ext_wrench_tcp_frame = new Geometry.WrenchMsg();
            this.ext_wrench_base_frame = new Geometry.WrenchMsg();
            this.digital_input_0 = false;
        }

        public RobotStatesMsg(Std.HeaderMsg header, sbyte mode, double[] q, double[] theta, double[] dq, double[] dtheta, double[] tau, double[] tau_des, double[] tau_dot, double[] tau_ext, Geometry.PoseMsg tcp_pose, Geometry.PoseMsg tcp_pose_des, Geometry.AccelMsg tcp_vel, Geometry.PoseMsg cam_pose, Geometry.PoseMsg flange_pose, Geometry.WrenchMsg ft_sensor_raw, Geometry.WrenchMsg ext_wrench_tcp_frame, Geometry.WrenchMsg ext_wrench_base_frame, bool digital_input_0)
        {
            this.header = header;
            this.mode = mode;
            this.q = q;
            this.theta = theta;
            this.dq = dq;
            this.dtheta = dtheta;
            this.tau = tau;
            this.tau_des = tau_des;
            this.tau_dot = tau_dot;
            this.tau_ext = tau_ext;
            this.tcp_pose = tcp_pose;
            this.tcp_pose_des = tcp_pose_des;
            this.tcp_vel = tcp_vel;
            this.cam_pose = cam_pose;
            this.flange_pose = flange_pose;
            this.ft_sensor_raw = ft_sensor_raw;
            this.ext_wrench_tcp_frame = ext_wrench_tcp_frame;
            this.ext_wrench_base_frame = ext_wrench_base_frame;
            this.digital_input_0 = digital_input_0;
        }

        public static RobotStatesMsg Deserialize(MessageDeserializer deserializer) => new RobotStatesMsg(deserializer);

        private RobotStatesMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.mode);
            deserializer.Read(out this.q, sizeof(double), 7);
            deserializer.Read(out this.theta, sizeof(double), 7);
            deserializer.Read(out this.dq, sizeof(double), 7);
            deserializer.Read(out this.dtheta, sizeof(double), 7);
            deserializer.Read(out this.tau, sizeof(double), 7);
            deserializer.Read(out this.tau_des, sizeof(double), 7);
            deserializer.Read(out this.tau_dot, sizeof(double), 7);
            deserializer.Read(out this.tau_ext, sizeof(double), 7);
            this.tcp_pose = Geometry.PoseMsg.Deserialize(deserializer);
            this.tcp_pose_des = Geometry.PoseMsg.Deserialize(deserializer);
            this.tcp_vel = Geometry.AccelMsg.Deserialize(deserializer);
            this.cam_pose = Geometry.PoseMsg.Deserialize(deserializer);
            this.flange_pose = Geometry.PoseMsg.Deserialize(deserializer);
            this.ft_sensor_raw = Geometry.WrenchMsg.Deserialize(deserializer);
            this.ext_wrench_tcp_frame = Geometry.WrenchMsg.Deserialize(deserializer);
            this.ext_wrench_base_frame = Geometry.WrenchMsg.Deserialize(deserializer);
            deserializer.Read(out this.digital_input_0);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.mode);
            serializer.Write(this.q);
            serializer.Write(this.theta);
            serializer.Write(this.dq);
            serializer.Write(this.dtheta);
            serializer.Write(this.tau);
            serializer.Write(this.tau_des);
            serializer.Write(this.tau_dot);
            serializer.Write(this.tau_ext);
            serializer.Write(this.tcp_pose);
            serializer.Write(this.tcp_pose_des);
            serializer.Write(this.tcp_vel);
            serializer.Write(this.cam_pose);
            serializer.Write(this.flange_pose);
            serializer.Write(this.ft_sensor_raw);
            serializer.Write(this.ext_wrench_tcp_frame);
            serializer.Write(this.ext_wrench_base_frame);
            serializer.Write(this.digital_input_0);
        }

        public override string ToString()
        {
            return "RobotStatesMsg: " +
            "\nheader: " + header.ToString() +
            "\nmode: " + mode.ToString() +
            "\nq: " + System.String.Join(", ", q.ToList()) +
            "\ntheta: " + System.String.Join(", ", theta.ToList()) +
            "\ndq: " + System.String.Join(", ", dq.ToList()) +
            "\ndtheta: " + System.String.Join(", ", dtheta.ToList()) +
            "\ntau: " + System.String.Join(", ", tau.ToList()) +
            "\ntau_des: " + System.String.Join(", ", tau_des.ToList()) +
            "\ntau_dot: " + System.String.Join(", ", tau_dot.ToList()) +
            "\ntau_ext: " + System.String.Join(", ", tau_ext.ToList()) +
            "\ntcp_pose: " + tcp_pose.ToString() +
            "\ntcp_pose_des: " + tcp_pose_des.ToString() +
            "\ntcp_vel: " + tcp_vel.ToString() +
            "\ncam_pose: " + cam_pose.ToString() +
            "\nflange_pose: " + flange_pose.ToString() +
            "\nft_sensor_raw: " + ft_sensor_raw.ToString() +
            "\next_wrench_tcp_frame: " + ext_wrench_tcp_frame.ToString() +
            "\next_wrench_base_frame: " + ext_wrench_base_frame.ToString() +
            "\ndigital_input_0: " + digital_input_0.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
