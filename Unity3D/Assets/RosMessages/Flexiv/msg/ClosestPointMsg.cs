//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Flexiv
{
    [Serializable]
    public class ClosestPointMsg : Message
    {
        public const string k_RosMessageName = "flexiv_msgs/ClosestPoint";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public bool is_show;
        public Geometry.PointMsg mesh_point;
        public Geometry.PointMsg obstacle_point;

        public ClosestPointMsg()
        {
            this.header = new Std.HeaderMsg();
            this.is_show = false;
            this.mesh_point = new Geometry.PointMsg();
            this.obstacle_point = new Geometry.PointMsg();
        }

        public ClosestPointMsg(Std.HeaderMsg header, bool is_show, Geometry.PointMsg mesh_point, Geometry.PointMsg obstacle_point)
        {
            this.header = header;
            this.is_show = is_show;
            this.mesh_point = mesh_point;
            this.obstacle_point = obstacle_point;
        }

        public static ClosestPointMsg Deserialize(MessageDeserializer deserializer) => new ClosestPointMsg(deserializer);

        private ClosestPointMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.is_show);
            this.mesh_point = Geometry.PointMsg.Deserialize(deserializer);
            this.obstacle_point = Geometry.PointMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.is_show);
            serializer.Write(this.mesh_point);
            serializer.Write(this.obstacle_point);
        }

        public override string ToString()
        {
            return "ClosestPointMsg: " +
            "\nheader: " + header.ToString() +
            "\nis_show: " + is_show.ToString() +
            "\nmesh_point: " + mesh_point.ToString() +
            "\nobstacle_point: " + obstacle_point.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
